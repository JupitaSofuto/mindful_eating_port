plugins {
    id 'idea'
    id 'net.minecraftforge.gradle' version '6+'
    id 'org.spongepowered.mixin' version '0.7.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}
version = "${project.minecraft}-${project.modVersion}"
group = 'com.minecraftabnormals.mindful_eating'

base {
    archivesName = modId
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    // The mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   Snapshot are built nightly.
    // stable_#            Stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // Simply re-run your setup task after changing the mappings to update your workspace.
    mappings channel: project.mappingsChannel, version: project.parchment + "-" + project.minecraft
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"

            arg '-mixin.config=mindful_eating.mixins.json'

            mods {
                mindful_eating {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            property 'mixin.env.disableRefMap', 'true'

            arg '-mixin.config=mindful_eating.mixins.json'

            mods {
                mindful_eating {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'mindful_eating', '--all', '--output', file('src/generated/resources/')

            mods {
                mindful_eating {
                    source sourceSets.main
                }
            }
        }
    }
}
sourceSets.main.resources { srcDir 'src/generated/resources' }
mixin {
    add sourceSets.main, "${modId}.refmap.json"
    config "${modId}.mixins.json"
}
repositories {
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        url "https://maven.jaackson.me"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${project.minecraft}-${project.forge}"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation fg.deobf("curse.maven:blueprint-382216:5292242")
    implementation fg.deobf("curse.maven:diet-443570:4813904")
    implementation fg.deobf("curse.maven:appleskin-248787:4770828")
    implementation fg.deobf("curse.maven:farmers-delight-398521:5051242")
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": project.modName,
                "Specification-Vendor": "Cameron",
                "Specification-Version": "1",
                "Implementation-Title": project.modName,
                "Implementation-Version": project.modVersion,
                "Implementation-Vendor": "Cameron",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                "MixinConfigs"            : project.modId + ".mixins.json"
        ])
    }
    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
